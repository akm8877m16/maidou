# -*- coding:utf-8 -*-
__author__ = 'wenhao Yin <akm8877m16@126.com>'
__copyright__ = 'Copyright 2016 wenhao'

'''
    mqtt client: receive mqtt messages and put them to rabbitmq

'''
import logging
import socket
import sys
import time
import paho.mqtt.client as mqtt
from tornado.options import options, define
import pika

import sys

sys.path.append('/home/webapps/maidouProject')

define("mqttPort", default=1883, help="mqtt port")
define("mqttServer", default="118.190.202.155")
logger = logging.getLogger(__name__)


class mqttMsg:
    def __init__(self, topic, payload):
        self.topic = topic
        self.payload = payload


hexTrans = lambda x: str(ord(x))

# 主程序
if __name__ == '__main__':
    options.parse_command_line()
    msg = mqttMsg("E/5CCF7FDA49AB",
                  [0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x01, 0x0C, 0x00, 0x01, 0x00, 0xff, 0xff, 0xff, 0x00, 0x03, 0x00,
                   0x04, 0x00, 0xe5, 0x00, 0x06, 0x00, 0x07, 0x00, 0x08, 0x00, 0x09, 0x00, 0x0A, 0x00, 0x0B, 0x00, 0x0C,
                   0x00, 0x0D, 0x00, 0x0E, 0x00, 0x0F, 0x00, 0x10, 0x00, 0x11, 0x00, 0x12, 0x00, 0x13, 0x00, 0x14, 0x00,
                   0x15, 0x00, 0x16, 0x00, 0x17, 0x00, 0x18, 0x00, 0x19, 0x00, 0x1A, 0x00, 0x1B, 0x00, 0x1C, 0x00, 0x1D,
                   0x00, 0x1E])

    msg2 = mqttMsg("E/243wrfds23424",
                   [0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x01, 0x0D, 0x10, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
                    0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00,
                    0x00, 0x06, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00,
                    0x00, 0x0A, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00,
                    0x00, 0x0E, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x10])

    msg3 = mqttMsg("M/A020A632C8EF", [0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x01, 0x05, 0x00, 0x00, 0x55, 0x55])
    msg4 = mqttMsg("M/A020A632C8EF", [0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x01, 0x05, 0x00, 0x00, 0xAA, 0xAA])

    mqttHost = options.mqttServer
    mqttPort = options.mqttPort
    mqttc = mqtt.Client()
    logging.info("Attempting connection to MQTT broker %s:%d..." % (mqttHost, int(mqttPort)))

    mqttc.connect(mqttHost, int(mqttPort))
    ack = bytearray()
    ack.extend(msg.payload)
    mqttc.publish(msg.topic, ack)

    logging.info("Message send on %s: %s" % (msg.topic, repr(msg.payload)))
